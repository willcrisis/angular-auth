"use strict";angular.module("willcrisis.angularjs-auth",["ui.router","angular-storage"]).provider("authConf",[function(){var t=this,e={loginState:"login",endpointUrl:"",logoutEndpointUrl:null,usernameFormProperty:"username",passwordFormProperty:"password",usernameProperty:"username",tokenProperty:"access_token",rolesProperty:"roles",refreshTokenProperty:"refresh_token",tokenTypeProperty:"token_type",adminRole:"ROLE_ADMIN",functionIfDenied:function(t,e,n,r){},functionIfAuthenticated:function(t,e){},functionIfLoggedOff:function(){}};t.default=angular.copy(e),t.$get=[function(){return t}],this.addEndpoint=function(n,r){t[n]=angular.copy(e),r&&angular.extend(t[n],r)}}]).service("auth",["$rootScope","store","$http","authConf",function(t,e,n,r){function o(t){t.endpoint&&(a.endpoint=t.endpoint),a.username=i(r[a.endpoint].usernameProperty,t),a.token=i(r[a.endpoint].tokenProperty,t),a.roles=i(r[a.endpoint].rolesProperty,t),a.refreshToken=i(r[a.endpoint].refreshTokenProperty,t),a.tokenType=i(r[a.endpoint].tokenTypeProperty,t),a.loggedIn=!!a.token}function i(t,e){var n=e;return t.split(".").forEach(function(t){n=n?n[t]:null}),n}var a=this;return a.username=null,a.roles=null,a.token=null,a.refreshToken=null,a.tokenType=null,a.customProperties={},a.loggedIn=!1,a.endpoint="default",a.broadcast=function(){t.$broadcast("userChange")},a.setEndpoint=function(t){a.endpoint=t},a.login=function(t,e,o){o||(o="default"),a.endpoint=o;var i={};return i[r[a.endpoint].usernameFormProperty]=t,i[r[a.endpoint].passwordFormProperty]=e,Promise.race([n.post(r[a.endpoint].endpointUrl,i).then(function(t){return a.authenticate(t.data),a.broadcast(),a},function(t){throw t})])},a.authenticate=function(t){o(t),t.endpoint=a.endpoint,n.defaults.headers.common.Authorization=((this.tokenType||"")+" "+this.token).trim(),r[a.endpoint].functionIfAuthenticated(a,t),e.set("auth",t)},a.logout=function(){if(o({}),a.customProperties={},n.defaults.headers.common.Authorization=null,e.remove("auth"),r[a.endpoint].functionIfLoggedOff(),r[a.endpoint].logoutEndpointUrl)return n.get(r[a.endpoint].logoutEndpointUrl)},a.hasRole=function(t){return!!a.roles&&a.roles.indexOf(t)>-1},a.hasAllRoles=function(t){if(!a.roles)return!1;for(var e=0;e<t.length;e++)if(!a.hasRole(t[e]))return!1;return!0},a.hasAnyRole=function(t){if(!a.roles)return!1;for(var e=0;e<t.length;e++)if(a.hasRole(t[e]))return!0;return!1},a.canAccess=function(t){return!t||(!!angular.isUndefined(t.auth)||(t.auth.constructor==Array?t.requireAll?a.hasAdminRole()||a.hasAllRoles(t.auth):a.hasAdminRole()||a.hasAnyRole(t.auth):t.auth===this.loggedIn))},a.hasAdminRole=function(){return!!a.roles&&a.hasRole(r[a.endpoint].adminRole)},a.addCustomProperty=function(t,e){a.customProperties[t]=e},a}]).directive("authUsername",["auth",function(t){return{restrict:"AE",template:"{{username}}",link:function(e){e.username=t.username}}}]).directive("authCustomProperty",["auth",function(t){return{restrict:"AE",template:"{{value}}",scope:{property:"@"},link:function(e,n,r){var o=e.property||r.authCustomProperty;if(!o)throw new Error("Property is required!");e.value=t.customProperties[o]}}}]).directive("authLoggedIn",["auth","ngIfDirective",function(t,e){var n=e[0];return{restrict:"AE",transclude:n.transclude,priority:n.priority-1,terminal:n.terminal,link:function(e,r,o){o.ngIf=function(){return t.loggedIn},n.link.apply(n,arguments)}}}]).directive("authNotLoggedIn",["auth","ngIfDirective",function(t,e){var n=e[0];return{restrict:"AE",transclude:n.transclude,priority:n.priority-1,terminal:n.terminal,link:function(e,r,o){o.ngIf=function(){return!t.loggedIn},n.link.apply(n,arguments)}}}]).directive("authHasRole",["auth","ngIfDirective",function(t,e){var n=e[0];return{restrict:"AE",transclude:n.transclude,priority:n.priority-1,terminal:n.terminal,scope:{role:"@"},link:function(e,r,o){var i=e.role||o.authHasRole;if(!i)throw new Error("auth-has-role: A Role is required");o.ngIf=function(){return t.hasAdminRole()||t.hasRole(i)},n.link.apply(n,arguments)}}}]).directive("authHasAdminRole",["auth","ngIfDirective",function(t,e){var n=e[0];return{restrict:"AE",transclude:n.transclude,priority:n.priority-1,terminal:n.terminal,scope:{},link:function(e,r,o){o.ngIf=function(){return t.hasAdminRole()},n.link.apply(n,arguments)}}}]).directive("authHasAnyRole",["auth","ngIfDirective",function(t,e){var n=e[0];return{restrict:"AE",transclude:n.transclude,priority:n.priority-1,terminal:n.terminal,scope:{roles:"@"},link:function(e,r,o){var i=e.roles?e.roles.split(","):o.authHasAnyRole?o.authHasAnyRole.split(","):null;if(!i)throw new Error("auth-has-any-role: At least one Role is required");o.ngIf=function(){return t.hasAdminRole()||t.hasAnyRole(i)},n.link.apply(n,arguments)}}}]).directive("authHasAllRoles",["auth","ngIfDirective",function(t,e){var n=e[0];return{restrict:"AE",transclude:n.transclude,priority:n.priority-1,terminal:n.terminal,scope:{roles:"@"},link:function(e,r,o){var i=e.roles?e.roles.split(","):o.authHasAllRoles?o.authHasAllRoles.split(","):null;if(!i)throw new Error("auth-has-all-roles: At least one Role is required");o.ngIf=function(){return t.hasAdminRole()||t.hasAllRoles(i)},n.link.apply(n,arguments)}}}]).run(["$transitions","$rootScope","$state","auth","authConf","store",function(t,e,n,r,o,i){e.$on("$stateChangeStart",function(t,e){r.canAccess(e)||(t.preventDefault(),o[r.endpoint].functionIfDenied(n,e,o,r),n.go(o[r.endpoint].loginState))}),t&&t.onStart({},function(t){var e=t.injector().get("auth"),n=t.injector().get("authConf");if(!e.canAccess(t.$to()))return n[e.endpoint].functionIfDenied(t.router.stateService,t.$to(),n,e),t.router.stateService.target("login")});var a=i.get("auth");a&&r.authenticate(a)}]);